{"version":3,"sources":["components/UI/Link/link.js","components/UI/Card/card.js","components/UI/Grid/grid.js","components/UI/Header/header.js","components/Search/search.js","components/UI/SearchForm/searchForm.js","components/Bookmark/bookmark.js","components/Folder/folder.js","components/Tree/tree.js","components/UI/Modal/modal.js","components/Configuration/configuration-options.js","components/Storage/storage.js","components/Configuration/configuration.js","components/UI/FormFields/abstract.js","components/UI/FormFields/text.js","components/UI/FormFields/checkbox.js","components/UI/FormFields/legend.js","components/UI/ConfigurationForm/background-config.js","components/UI/ConfigurationForm/configuration-form.js","components/UI/ConfigurationForm/toggle.js","components/UI/GlobalBackground/global-background.js","components/ChromeApps/model.js","components/UI/Tiles/tiles.js","components/ChromeApps/view.js","components/App/app.js","serviceWorker.js","index.js"],"names":["getFavicon","url","join","removeBookmark","bookmark","tree","remove","update","Link","_ref","title","react_default","a","createElement","href","className","src","alt","type","uk-icon","onClick","bind","Card","links","config","linksItems","map","link","index","key","UI_Link_link","background","dark_mode","classNames","concat","Grid","items","elems","item","isHidden","card","iterator","data-uk-grid","Header","children","container_class_names","title_class_names","doesItemMatch","searchExp","match","search","folders","searchQuery","queryExp","RegExp","reduce","result","folder","doesFolderMatch","matchedLinks","filter","length","push","Object","objectSpread","SearchForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","event","setState","target","value","searchCallback","searchInput","focus","input","onSubmit","submitCallback","data-uk-icon","placeholder","onChange","onInputChange","ref","setInputRef","React","Component","bookmarks","window","chrome","Bookmark","assign","confirm","id","Folder","treeNode","elem","extractFoldersFromNode","node","Tree","data","onUpdate","updateCallback","Promise","resolve","getTree","_setData","_extractFolders","Modal","UIkit","modal","hide","show","uk-modal","config_options","area_one_title","defaultValue","label","area_two_title","background_config","area_three_title","show_apps","storage","defaults","Storage","defaultData","chapter","get","then","_this2","sync","_this3","reject","keys","Error","prepared_data","defineProperty","clear","set","handler","onChanged","addListener","options","Configuration","Abstract","evt","onChangeCallback","InputText","for","name","Checkbox","checked","class","legend","BackgroundConfig","values","color","style","backgroundColor","data-uk-drop","es","disableAlpha","onChangeComplete","handleChange","splice","hex","getRenderedPickers","AbstractField","getFieldsWithValues","fields","fieldsArray","fieldKey","hasOwnProperty","ConfigurationForm","fieldset","renderedFieldset","field","checkbox_Checkbox","onFormChange","background_config_BackgroundConfig","text_InputText","updatedState","onConfigSave","additionalClassNames","action","getRenderedFieldset","ConfigToggle","uk-toggle","getBackgroundStyles","GlobalBackground_global_background","management","ChromeApps","apps","getAll","isApp","Tiles","appLaunchUrl","shortName","icons","width","height","ChoromeApps","appsData","Model","updateApps","model","tiles","App","onTreeUpdate","assertThisInitialized","updateConfig","use","Icons","preventDefault","location","header","searchForm_SearchForm","onSearch","onSearchSubmit","toggle","view_ChoromeApps","grid","configuration_form_ConfigurationForm","Boolean","hostname","ReactDOM","render","App_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfb5bb0f.chunk.js","sourcesContent":["import React from 'react'\nimport './link.css'\n\nconst getFavicon = url => ['chrome://favicon/', url].join('')\n\nconst removeBookmark = (bookmark, tree) => {\n    bookmark.remove();\n    tree.update();\n}\n\nconst Link = ({url, title, bookmark, tree}) => (\n    <div>\n        <a href={ url } className=\"link\">\n            <img src={getFavicon(url)} alt=\"\" className=\"link__image\"/>\n            <span className=\"link__title\">{ title || url }</span>\n        </a>\n        <div className=\"uk-position-right uk-flex uk-flex-right uk-flex-middle link__actions\">\n            <button type=\"button\" className=\"uk-icon uk-padding-small link__remove\" uk-icon=\"close\" onClick={removeBookmark.bind(this, bookmark, tree)}></button>\n        </div>\n    </div>\n)\n\nexport default Link\n","import React from 'react'\nimport Link from '../Link'\n\nconst Card = ({links, title, tree, config}) => {\n    let linksItems = links.map((link, index) => {\n        let classNames = \"link__container fade\";\n        \n        return (\n            <li key={index} className={classNames}>\n                <Link url={link.url} title={link.title} bookmark={link} tree={tree} config={config}/>\n            </li>\n        )\n    })\n\n    let background = config.dark_mode ? 'secondary' : 'default',\n        classNames = `uk-card uk-card-${background} uk-card-body`\n\n    return (\n        <div className={classNames}>\n            <h2 className=\"uk-card-title\">{title}</h2>\n            <ul className=\"uk-list\">\n                {linksItems}\n            </ul>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from '../Card'\n\nconst Grid = ({items, tree, config}) => {\n    const elems = items.map((item, index) => {\n        let classNames = \"uk-width-1-1 uk-width-1-2@s uk-width-1-3@m\";\n        classNames += item.isHidden ? ' fade--hidden' : '';\n\n        return (\n            <li className={classNames} key={index}>\n                <Card title={item.title} links={item.links} iterator={index} tree={tree} config={config} />\n            </li>\n        )\n    })\n\n    return (\n        <ul className=\"uk-margin-medium-bottom\" data-uk-grid=\"masonry: true\">{elems}</ul>\n    )\n}\n\nexport default Grid\n","import React from 'react'\n\nconst Header = ({title, children, config}) => {\n    let container_class_names = `${(config.dark_mode ? 'uk-background-secondary' : 'uk-background-default')} uk-margin-medium-bottom`,\n        title_class_names = `uk-heading-bullet uk-text-large ${(config.dark_mode ? 'uk-light' : '')}`\n    \n    return (\n        <div className={container_class_names}>\n            <div className=\"uk-container uk-container-large\">\n                <div className=\"uk-grid uk-padding-small uk-padding-remove-left uk-padding-remove-right\">\n                    <div className=\"uk-width-2-3\">\n                        <h1 className={title_class_names}><span>{title}</span></h1>\n                    </div>\n                    <div className=\"uk-width-1-3 uk-flex uk-flex-middle uk-flex-between\">\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","const doesItemMatch = (searchExp, item) => item.title.match(searchExp) || (item.url && item.url.match(searchExp));\n\nconst getMatchedItems = (searchExp, items) => items.filter(doesItemMatch.bind(this, searchExp));\n\nexport default {\n    getResults(folders, searchQuery) {\n        const queryExp = new RegExp(searchQuery, 'i');\n\n        return folders.reduce((result, folder) => {\n            const doesFolderMatch = doesItemMatch(queryExp, folder);\n            const matchedLinks = getMatchedItems(queryExp, folder.links);\n\n            if (matchedLinks.length) {\n                result.push({...folder, links: matchedLinks})\n            } else {\n                if (doesFolderMatch) {\n                    result.push(folder)\n                }\n            }\n\n            return result\n        }, []);\n    }\n}\n","import React from 'react'\n\nexport default class SearchForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            query: \"\"\n        }\n    }\n\n    onInputChange(event) {\n        this.setState({\n            query: event.target.value\n        }, function () {\n            this.props.searchCallback(this.state.query)\n        }.bind(this))\n    }\n\n    componentDidMount() {\n        this.searchInput.focus()\n    }\n\n    setInputRef(input) {\n        this.searchInput = input\n    }\n\n    render() {\n        return (\n            <form className=\"uk-search uk-flex uk-flex-middle\" onSubmit={this.props.submitCallback}>\n                <div className=\"uk-width-auto uk-margin-small-right\">\n                    <span data-uk-icon=\"search\"></span>\n                </div>\n                <div className=\"uk-width-expand\">\n                    <input className=\"uk-search-input uk-text-large\" type=\"search\" placeholder=\"Search...\" value={this.state.query} onChange={this.onInputChange.bind(this)} ref={this.setInputRef.bind(this)}/>\n                </div>\n            </form>\n        )\n    }\n}\n","const bookmarks = window.chrome.bookmarks;\n\nexport default class Bookmark {\n    constructor(props) {\n        Object.assign(this, {\n            ...props\n        })\n    }\n\n    remove() {\n        const confirmed = window.confirm(\"Are you sure you want to remove the bookmark?\");\n\n        if (confirmed) {\n            bookmarks.remove(this.id)\n        }\n    }\n}\n","import Bookmark from '../Bookmark'\n\nexport default class Folder {\n    constructor(treeNode) {\n        const links = treeNode.children.filter(item => !item.children);\n        const {id, title} = treeNode;\n\n        this.id = id;\n        this.title = title;\n        this.links = links.map((elem) => new Bookmark(elem))\n    }\n}\n","import Folder from '../Folder'\n\nconst bookmarks = window.chrome.bookmarks;\n\nconst hasNodeLeaves = tree => tree.children.filter((item) => !item.children).length;\n\nconst extractFoldersFromNode = (folders, node) => {\n    if (node.children) {\n        if (hasNodeLeaves(node)) {\n            folders.push(new Folder(node));\n        }\n        return node.children.reduce(extractFoldersFromNode, folders)\n    }\n    return folders;\n}\n\nexport default class Tree {\n    constructor(props) {\n        this.data = [];\n        this.folders = [];\n        this.onUpdate = props.updateCallback || null;\n    }\n\n    update() {\n        return new Promise((resolve) => {\n            bookmarks.getTree((tree) => {\n                this._setData(tree);\n                resolve(this);\n            });\n        })\n    }\n\n    _setData(data) {\n        this.data = data;\n        this.folders = this._extractFolders(data);\n\n        if (typeof this.onUpdate == 'function') {\n            this.onUpdate(this)\n        }\n    }\n\n    _extractFolders(tree) {\n        return tree.reduce(extractFoldersFromNode, []);\n    }\n}\n","import React from 'react'\nimport UIkit from 'uikit';\n\nexport default class Modal extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        UIkit.modal(`#${this.props.id}`);\n    }\n\n    close() {\n        UIkit.modal(`#${this.props.id}`).hide()\n    }\n\n    open() {\n        UIkit.modal(`#${this.props.id}`).show()\n    }\n\n    render() {\n        return (\n            <div id={this.props.id} uk-modal>\n                <div className=\"uk-modal-dialog uk-modal-body\">\n                    <h2 className=\"uk-modal-title\">{this.props.title}</h2>\n                    <button className=\"uk-modal-close\" type=\"button\">Close</button>\n                </div>\n            </div>\n        )\n    }\n}\n","const config_options = {\n    area_one_title : {\n        type            : 'legend',\n        defaultValue    : null,\n        label           : 'Appearence'\n    },\n    dark_mode : {\n        type            : 'checkbox',\n        defaultValue    : true,\n        label           : 'Dark Mode'\n    },\n    area_two_title : {\n        type            : 'legend',\n        defaultValue    : null,\n        label           : 'Background'\n    },\n    background_config: {\n        type            : 'background_config',\n        defaultValue    : ['#f64f59', '#c471ed','#12c2e9'],\n        label           : 'First color'\n    },\n    area_three_title : {\n        type            : 'legend',\n        defaultValue    : null,\n        label           : 'Tools'\n    },\n    show_apps: {\n        type            : 'checkbox',\n        defaultValue    : false,\n        label           : 'Show Chrome applications'\n    }\n}\n\nexport default config_options\n","const storage = window.chrome.storage;\n\nconst defaults = {}\n\nexport default class Storage {\n    constructor(defaultData, chapter) {\n        this.chapter = chapter;\n\n        this.data = {}\n        \n        if (chapter) {\n            this.data[chapter] = defaultData || defaults\n        } else {\n            this.data = defaultData || defaults\n        }\n\n        this.get(this.data).then(data => chapter ? (this.data[chapter] = data) : (this.data = data))\n    }\n\n    get() {\n        return new Promise(resolve => {\n            storage.sync.get(this.data, data => resolve(this.chapter ? data[this.chapter] : data))\n        })\n    }\n\n    set(data) {\n        return new Promise((resolve, reject) => {\n            if (!data || !Object.keys(data).length) {\n                reject(new Error ('No data is provided to set'))\n            }\n            let prepared_data = this.chapter ? {\n                ...this.data,\n                [this.chapter]: Object.assign({}, this.data[this.chapter], data)\n            } : Object.assign({}, this.data, data);\n\n            this.data = prepared_data;\n\n            storage.sync.clear( () => storage.sync.set(prepared_data, result => resolve(result)))\n        })\n    }\n\n    addListener(handler) {\n        storage.onChanged.addListener(handler)\n    }\n}\n","import Storage from '../Storage'\nimport options from './configuration-options'\n\nconst defaults = Object.keys(options).reduce((config, key) => {\n        config[key] = options[key].defaultValue\n        return config\n    }, {})\n\nexport default class Configuration extends Storage {\n    constructor(defaultData) {\n        super(defaultData || defaults, 'config');\n    }\n}\n","import React from 'react';\n\nexport default class Abstract extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value || ''\n        }\n    }\n\n    onChange(evt) {\n        this.setState({\n            value: evt.target.value\n        })\n\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback(evt)\n        }\n    }\n}\n","import React from 'react';\nimport Abstract from './abstract';\n\nexport default class InputText extends Abstract {\n    render() {\n        return (\n            <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" for=\"form-stacked-text\">{this.props.label}</label>\n                <div className=\"uk-form-controls\">\n                    <input className=\"uk-input\" type=\"text\" placeholder={this.props.placeholder} name={this.props.id} onChange={this.onChange.bind(this)} value={this.state.value} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.props.value || false\n        }\n    }\n\n    onChange(evt) {\n        this.setState({\n            value: evt.target.checked\n        })\n\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback(evt)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"uk-margin\">\n                <label>\n                    <input className=\"uk-checkbox\" type=\"checkbox\" checked={this.state.value} name={this.props.id} onChange={this.onChange.bind(this)} />\n                    <span class=\"uk-margin-left\">{this.props.label}</span>\n                </label>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default ({label}) => (\n    <legend className=\"uk-legend uk-margin-top\">{label}</legend>\n)\n","import React from 'react';\nimport AbstractField from '../FormFields/abstract';\nimport { ChromePicker } from 'react-color';\n\nexport default class BackgroundConfig extends AbstractField {\n    getRenderedPickers(values) {\n        return values.map((color, index) => (\n            <div className=\"uk-margin-top uk-margin-right\">\n                <button type=\"button\" className=\"uk-button uk-padding-small\" style={{backgroundColor: this.state.value[index] }} />\n                <div data-uk-drop=\"mode: click\">\n                    <ChromePicker\n                        color={ this.state.value[index] }\n                        disableAlpha={ true }\n                        onChangeComplete={ (color, event) => this.handleChange(color, index) }\n                    />\n                </div>\n            </div>\n            )\n        )\n    }\n\n    handleChange(color, index) {\n        let value = this.state.value;\n\n        value.splice(index, 1, color.hex)\n\n        this.setState({\n            value: value\n        })\n\n        if (this.props.onChangeCallback) {\n            this.props.onChangeCallback({\n                target: {\n                    name: 'background_config',\n                    type: 'custom',\n                    value: value\n                }\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"uk-flex uk-flex-left uk-margin-bottom\">\n                {this.getRenderedPickers(this.state.value)}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Modal from '../Modal'\nimport Configuration, { fields } from '../../Configuration'\nimport { InputText, Checkbox, Legend } from '../FormFields'\nimport BackgroundConfig from './background-config'\n\nconst getFieldsWithValues = (fields, config) => Object.keys(fields).reduce((fieldsArray, fieldKey) => {\n        fieldsArray.push({\n            ...fields[fieldKey],\n            id: fieldKey,\n            value: config.hasOwnProperty(fieldKey) ? config[fieldKey] : fields[fieldKey].defaultValue\n        })\n        return fieldsArray;\n    }, [])\n\nexport default class ConfigurationForm extends Modal {\n    constructor(props) {\n        super(props);\n        this.config = new Configuration();\n\n        this.state = {\n            fieldset: []\n        }\n\n        this.config.get().then(data => this.setState({\n            fieldset: getFieldsWithValues(fields, data)\n        }))\n    }\n\n    getRenderedFieldset(fieldset) {\n        if (!fieldset) return false;\n\n        return fieldset.reduce((renderedFieldset, field) => {\n            switch (field.type) {\n                case \"checkbox\" :\n                    renderedFieldset.push(\n                       <Checkbox {...field} onChangeCallback={ this.onFormChange.bind(this) } />\n                    )\n                    break;\n                case \"legend\" :\n                    renderedFieldset.push(\n                        <Legend {...field} />\n                    )\n                    break;\n                case \"background_config\" :\n                    renderedFieldset.push(\n                        <BackgroundConfig {...field} onChangeCallback={ this.onFormChange.bind(this) } />\n                    )\n                    break;\n                default: \n                    renderedFieldset.push(\n                        <InputText {...field} onChangeCallback={ this.onFormChange.bind(this) }/>\n                    )\n                    break;\n            }\n            return renderedFieldset\n        }, [])\n    }\n\n    onFormChange(evt) {\n        const optionId = evt.target.name;\n        const updatedState = {};\n\n        updatedState[optionId] = (evt.target.type == 'checkbox') ? evt.target.checked : evt.target.value\n\n        this.config.set(updatedState).then(() => {\n            if (this.props.onConfigSave) {\n                this.props.onConfigSave()\n            }\n        })\n    }\n\n    render() {\n        const additionalClassNames = this.props.config.dark_mode ? 'uk-background-secondary uk-light' : '';\n        \n        return (\n            <div id={this.props.id} uk-modal>\n                <div className={['uk-modal-dialog uk-modal-body', additionalClassNames].join(' ')}>\n                    <h2 className=\"uk-modal-title\">{this.props.title}</h2>\n                    <form action=\"#\">\n                        {this.getRenderedFieldset(this.state.fieldset)}\n                        <p class=\"uk-text-right\">\n                            <button className=\"uk-button uk-button-primary uk-modal-close\" type=\"button\">Close</button>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst ConfigToggle = () => (\n    <button type=\"button\" className=\"uk-icon-settings\" uk-icon=\"settings\" uk-toggle=\"target: #configForm\"></button>\n)\n\nexport default ConfigToggle\n","import React from 'react';\nimport './global-background.css';\n\nconst getBackgroundStyles = (config) => {\n    return config.background_config ? {\n        background: `linear-gradient(to right, ${config.background_config.join(', ')})`\n    } : null\n}\n\nexport default ({config}) => (\n    <div className=\"global-background\" style={ getBackgroundStyles(config) }></div>\n)\n","import React from 'react';\n\nconst management = window.chrome.management;\n\nexport default class ChromeApps {\n    constructor(props) {\n        this.apps = [];\n    }\n\n    update() {\n        return new Promise((resolve) => {\n            management.getAll(apps => {\n                return resolve(apps ? apps.filter(item => item.isApp) : [])\n            })\n        })\n    }\n}\n","import React from 'react'\n\nconst Tiles = (({items, config}) => {\n    const background = config.dark_mode ? 'secondary' : 'default';\n    const elems = items.map((item, index) => (\n        <li key={index}>\n            <a href={item.appLaunchUrl} className={`uk-tile uk-tile-${background} uk-padding-small uk-display-block`} title={item.shortName}>\n                <img src={item.icons.length ? item.icons[item.icons.length - 1].url : ''} width=\"40\" height=\"40\" />\n            </a>\n        </li>\n    ))\n    return elems && elems.length ? (\n        <ul className=\"uk-flex uk-flex-center uk-text-center uk-padding-remove reset-list uk-margin-medium-bottom\">{elems}</ul>\n    ) : null\n})\n\nexport default Tiles\n","import React from 'react'\nimport Model from './model'\nimport Tiles from '../UI/Tiles'\n\nexport default class ChoromeApps extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const appsData = new Model();\n\n        this.state = {\n            items: []\n        }\n\n        this.updateApps(appsData);\n    }\n\n    async updateApps(model){\n        const apps = await model.update();\n\n        this.setState({\n            items: apps\n        })\n    }\n\n    render() {\n        return this.props.config.show_apps ? (\n            <Tiles\n                items={ this.state.items }\n                config={ this.props.config } />\n        ) : null\n    }\n}\n","import React from 'react'\nimport './app.css'\nimport UIkit from 'uikit'\nimport Icons from 'uikit/dist/js/uikit-icons'\nimport 'uikit/dist/css/uikit-core.css'\nimport Grid from '../UI/Grid'\nimport Header from '../UI/Header'\nimport search from '../Search'\nimport SearchForm from '../UI/SearchForm'\nimport Tree from '../Tree'\nimport ConfigurationForm, {ConfigToggle} from '../UI/ConfigurationForm'\nimport Configuration from '../Configuration'\nimport GlobalBackground from '../UI/GlobalBackground'\nimport ChromeApps from '../ChromeApps';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        const tree = new Tree({\n            updateCallback: this.onTreeUpdate.bind(this)\n        });\n\n        this.config = new Configuration();\n\n        this.state = {\n            tree: tree,\n            folders: [],\n            config: {},\n            apps: []\n        }\n\n        tree.update()\n        this.updateConfig();\n    }\n\n    componentDidMount(){\n        UIkit.use(Icons);\n    }\n\n    updateConfig() {\n        this.config.get().then(data => this.setState({config: data}))\n    }\n\n    onTreeUpdate({folders}) {\n        this.setState({\n            folders: folders\n        })\n    }\n\n    onSearch(searchQuery) {\n        this.setState({\n            folders: search.getResults(this.state.tree.folders, searchQuery)\n        })\n    }\n\n    onSearchSubmit(evt) {\n        evt.preventDefault();\n\n        if ((this.state.folders.length == 1) && (this.state.folders[0].links.length == 1)) {\n            window.location = this.state.folders[0].links[0].url\n        }\n\n        return false\n    }\n\n    render() {\n        return (\n            <div>\n                <GlobalBackground \n                    config={ this.state.config } />\n                <Header\n                    title=\"My Bookmarks\"\n                    config={ this.state.config } >\n                    <SearchForm \n                    searchCallback={ this.onSearch.bind(this) }\n                    submitCallback={ this.onSearchSubmit.bind(this) } />\n                    <ConfigToggle />\n                </Header>\n                <div className=\"uk-container uk-container-large\">\n                    <ChromeApps\n                        items={ this.state.apps }\n                        config={ this.state.config } />\n                    <Grid \n                        items={ this.state.folders }\n                        tree={ this.state.tree }\n                        config={ this.state.config } />\n                </div>\n                <ConfigurationForm\n                    id=\"configForm\"\n                    title=\"Settings\"\n                    config={ this.state.config }\n                    onConfigSave={ this.updateConfig.bind(this) } />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}